name: Main

on:
    push:
        # Publish `main` as Docker `latest` image.
        branches:
            - main

    # Run tests for any PRs.
    pull_request:

jobs:
    # Run tests.
    # See also https://docs.docker.com/docker-hub/builds/automated-testing/
    test:
        runs-on: ubuntu-latest

        steps:
            -   uses: actions/checkout@v2

            -   name: Set up Node.js 16
                uses: actions/setup-node@v2
                with:
                    node-version: '16'

            -   name: Build Image
                run: docker build . -t iptv-m3u-client
            -   name: Check lint
                run: docker run iptv-m3u-client npm run-script lint

    gh-pages:
        needs: test
        runs-on: ubuntu-latest
        if: github.event_name == 'push'
        steps:
            -   name: Checkout üõéÔ∏è
                uses: actions/checkout@v2.3.1
            -   name: Install
                run: npm install
            -   name: Build
                run: npm run build
            -   name: Deploy üöÄ
                uses: JamesIves/github-pages-deploy-action@4.1.1
                with:
                    branch: gh-pages # The branch the action should deploy to.
                    folder: build # The folder the action should deploy.

    push:
        needs: test
        runs-on: ubuntu-latest
        if: github.event_name == 'push'

        steps:
            -   uses: actions/checkout@v2
            -   name: Set up QEMU
                uses: docker/setup-qemu-action@v1
            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v1
            -   name: Login to DockerHub
                uses: docker/login-action@v1
                with:
                    username: ${{ secrets.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}
            -   name: Build and push
                id: docker_build
                uses: docker/build-push-action@v2
                with:
                    build-args: |
                        NODE_ENV=production
                    push: true
                    tags: hex62/iptv-viewer:latest
                    platforms: linux/amd64,linux/arm64
            -   name: Image digest
                run: echo ${{ steps.docker_build.outputs.digest }}
                    docker push $IMAGE_ID:$VERSION
